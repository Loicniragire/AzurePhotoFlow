services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"  # App Service requires the main container to listen on port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  backend:
    image: "${CONTAINER_REGISTRY}/azurephotoflow-backend:${stableTag:-latest}"
    build:
      context: ./backend/AzurePhotoFlow.Api
      dockerfile: Dockerfile
      args:
        CERTIFICATE_PASSWORD: ${CERTIFICATE_PASSWORD}
        AZURE_BLOB_STORAGE: ${AZURE_BLOB_STORAGE}
        CERTIFICATE_PATH: ${CERTIFICATE_PATH}
        MODE: ${MODE}
    environment:
      - AZURE_BLOB_STORAGE=${AZURE_BLOB_STORAGE}
      - CERTIFICATE_PATH=${CERTIFICATE_PATH}
      - CERTIFICATE_PASSWORD=${CERTIFICATE_PASSWORD}
      - MODE=${MODE}
    expose:
      - "80"  # Internal port (no host mapping)
    networks:
      - app-network

  frontend:
    image: "${CONTAINER_REGISTRY}/azurephotoflow-frontend:${stableTag:-latest}"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        MODE: ${MODE:-development}
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - MODE=${MODE}
    expose:
      - "80"  # Internal port (no host mapping)
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
