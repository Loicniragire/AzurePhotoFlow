apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: azurephotoflow-ingress
  namespace: azurephotoflow
  annotations:
    # MicroK8s ingress controller annotations
    kubernetes.io/ingress.class: "public"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"  # Allow large file uploads
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    # SSL/TLS with cert-manager
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - your-domain.com  # Replace with your actual domain
    - api.your-domain.com  # Replace with your API subdomain if using
    secretName: azurephotoflow-tls
  rules:
  # Frontend on main domain
  - host: your-domain.com  # Replace with your actual domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      # API on same domain with /api prefix (recommended for MicroK8s)
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
      # MinIO Console access (optional - for admin access)
      - path: /minio
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9001
  # Alternative: API on separate subdomain (if you prefer)
  # Uncomment this section if you want api.yourdomain.com
  # - host: api.your-domain.com
  #   http:
  #     paths:
  #     - path: /
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: backend-service
  #           port:
  #             number: 80