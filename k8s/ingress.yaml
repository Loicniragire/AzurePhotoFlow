apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: azurephotoflow-ingress
  namespace: azurephotoflow
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"  # Allow large file uploads
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    # Enable rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # If using cert-manager
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - your-domain.com  # Replace with your actual domain
    - api.your-domain.com  # Replace with your API subdomain
    secretName: azurephotoflow-tls
  rules:
  # Frontend
  - host: your-domain.com  # Replace with your actual domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
  # Backend API
  - host: api.your-domain.com  # Replace with your API subdomain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
  # Alternative: API on same domain with /api prefix
  - host: your-domain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
      # MinIO Console (optional - for admin access)
      - path: /minio
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9001